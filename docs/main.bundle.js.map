{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.css","./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.html","./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.ts","./src/app/ngx-drp/ngx-drp.module.ts","./src/app/ngx-drp/ngx-drp/ngx-drp.component.css","./src/app/ngx-drp/ngx-drp/ngx-drp.component.html","./src/app/ngx-drp/ngx-drp/ngx-drp.component.ts","./src/app/ngx-drp/presets/presets.component.css","./src/app/ngx-drp/presets/presets.component.html","./src/app/ngx-drp/presets/presets.component.ts","./src/app/ngx-drp/range/range.component.css","./src/app/ngx-drp/range/range.component.html","./src/app/ngx-drp/range/range.component.ts","./src/app/ngx-drp/services/calendar-overlay.service.ts","./src/app/ngx-drp/services/config-store.service.ts","./src/app/ngx-drp/services/range-store.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\">\\n\\n  <p>\\n    From: {{range.fromDate|date}} To: {{range.toDate|date}} \\n  </p>\\n\\n  <p>\\n    <ngx-drp (selectedDateRangeChanged)=\\\"updateRange($event)\\\" [options]=\\\"options\\\"></ngx-drp>\\n  </p>\\n\\n\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Range, NgxDrpOptions, PresetItem } from './ngx-drp/model/model';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  range:Range = {fromDate:new Date(), toDate: new Date()};\n  options:NgxDrpOptions;\n  presets:Array<PresetItem> = [];\n\n  ngOnInit() {\n    let today = new Date();\n    let fromMin = new Date(today.getFullYear(), today.getMonth()-2, 1);\n    let fromMax = new Date(today.getFullYear(), today.getMonth()+1, 0);\n    let toMin = new Date(today.getFullYear(), today.getMonth()-1, 1);\n    let toMax = new Date(today.getFullYear(), today.getMonth()+2, 0);\n\n    this.setupPresets();\n    this.options = {\n                    presets:this.presets,\n                    format: 'longDate',\n                    range: {fromDate:today, toDate: today},\n                    //excludeWeekends:true,\n                    //fromMinMax: {fromDate:fromMin, toDate:fromMax},\n                    //toMinMax: {fromDate:toMin, toDate:toMax},\n                  };\n  }\n\n  updateRange(range:Range){\n    this.range = range;\n  }  \n\n  setupPresets() {\n\n    let backDate = (numOfDays) => {\n      let today = new Date();\n      return new Date(today.setDate(today.getDate() - numOfDays));\n    }\n    \n    let today = new Date();\n    let yesterday = backDate(1);\n    let minus7 = backDate(7)\n    let minus30 = backDate(30);\n    let currMonthStart = new Date(today.getFullYear(), today.getMonth(), 1);\n    let currMonthEnd = new Date(today.getFullYear(), today.getMonth()+1, 0);\n    let lastMonthStart = new Date(today.getFullYear(), today.getMonth()-1, 1);\n    let lastMonthEnd = new Date(today.getFullYear(), today.getMonth(), 0);\n    \n    this.presets =  [\n      {presetLabel: \"Yesterday\", range:{fromDate:yesterday, toDate:today}},\n      {presetLabel: \"Last 7 Days\", range:{fromDate: minus7, toDate:today}},\n      {presetLabel: \"Last 30 Days\", range:{fromDate: minus30, toDate:today}},\n      {presetLabel: \"This Month\", range:{fromDate: currMonthStart, toDate:currMonthEnd}},\n      {presetLabel: \"Last Month\", range:{fromDate: lastMonthStart, toDate:lastMonthEnd}}\n    ]\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NgxDrpModule } from './ngx-drp/ngx-drp.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgxDrpModule\n  ],\n  bootstrap: [AppComponent],\n  providers:[{provide:Date, useValue: new Date()}]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".ngx-drp-date-label {\\n    background: #fafafa;\\n    margin: 15px;\\n    padding: 4px 2px 4px 2px;\\n    width: 100%;\\n    font-size: 14px;\\n    font-weight: 500;\\n}\\n\\n.mat-drp-selected-date-label {\\n    font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n    color: rgba(0,0,0,.38);\\n    padding-left: 5%;\\n}\\n\\n/* .mat-calendar {\\n    width: 296px;\\n    height: 354px;\\n} */\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.css\n// module id = ./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.css\n// module chunks = main","module.exports = \"<div>\\n\\n  <!-- <mat-divider></mat-divider> -->\\n  <span class=\\\"ngx-drp-date-label\\\">\\n    <label>{{prefix}}</label>\\n    <label class=\\\"mat-drp-selected-date-label\\\">{{selectedDate | date:dateFormat}}</label>\\n  </span>\\n  <!-- <mat-divider></mat-divider> -->\\n\\n  <mat-calendar \\n    [startAt]=\\\"selectedDate\\\"\\n    [selected]=\\\"selectedDate\\\"\\n    [minDate]=\\\"minDate\\\"\\n    [maxDate]=\\\"maxDate\\\"\\n    (selectedChange)=\\\"onSelectedChange($event)\\\"\\n    (yearSelected)=\\\"onYearSelected($event)\\\"\\n    (_userSelection)=\\\"onUserSelection($event)\\\"\\n    [dateFilter]=\\\"weekendFilter\\\">\\n  </mat-calendar>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.html\n// module id = ./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.html\n// module chunks = main","import { Component, ViewChild, Output, Input, EventEmitter, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\nimport { MatCalendar } from '@angular/material/datepicker';\nimport { ConfigStoreService } from '../services/config-store.service';\n\n@Component({\n  selector: 'calendar-wrapper',\n  templateUrl: './calendar-wrapper.component.html',\n  styleUrls: ['./calendar-wrapper.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CalendarWrapperComponent implements OnChanges {\n\n  @ViewChild(MatCalendar) matCalendar: MatCalendar<Date>;\n\n  @Output() readonly selectedDateChange:EventEmitter<Date> = new EventEmitter<Date>();\n\n  @Input() selectedDate:Date;\n  @Input() prefix:string;\n  @Input() minDate:Date;\n  @Input() maxDate:Date;\n  weekendFilter = (d:Date) => true;\n  dateFormat:string;\n\n  constructor(private configStore:ConfigStoreService) { \n    this.dateFormat = configStore.ngxDropOptions.format;\n    if(configStore.ngxDropOptions.excludeWeekends) {\n      this.weekendFilter = (d: Date): boolean => {\n          const day = d.getDay();\n          return day !== 0 && day !== 6;\n      }\n    }\n  }\n  \n  ngOnChanges(changes:SimpleChanges){\n    // Necessary to force view refresh\n    this.matCalendar._activeDate = changes.selectedDate.currentValue;\n  }\n\n  onSelectedChange(date){\n    this.selectedDateChange.emit(date);\n  }\n\n  onYearSelected(e) { }\n\n  onUserSelection(e) { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/calendar-wrapper/calendar-wrapper.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxDrpComponent } from './ngx-drp/ngx-drp.component';\nimport { RangeComponent } from './range/range.component';\nimport { CalendarWrapperComponent } from './calendar-wrapper/calendar-wrapper.component';\nimport { PresetsComponent } from './presets/presets.component';\nimport { CalendarOverlayService } from './services/calendar-overlay.service';\nimport { RangeStoreService } from './services/range-store.service';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatIconModule } from '@angular/material/icon';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ConfigStoreService } from './services/config-store.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    MatDividerModule,\n    MatButtonModule,\n    MatTooltipModule,\n    MatIconModule,\n    OverlayModule,\n  ],\n  declarations: [\n    NgxDrpComponent,\n    CalendarWrapperComponent,\n    RangeComponent,\n    PresetsComponent\n  ],\n  providers: [\n      CalendarOverlayService,\n      RangeStoreService,\n      ConfigStoreService,\n      {provide:Date, useValue: new Date()}\n  ],\n  //bootstrap: [NgxDrpComponent],\n  entryComponents:[RangeComponent],\n  exports: [NgxDrpComponent]\n})\nexport class NgxDrpModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/ngx-drp.module.ts","module.exports = \"/* .mat-drp-date-display {\\n    min-width: 150px;\\n    max-width: 220px;\\n    width: 100%;\\n} */\\n\\n.mat-drp-date-input {\\n    text-overflow: ellipsis;\\n    color: royalblue;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/ngx-drp/ngx-drp.component.css\n// module id = ./src/app/ngx-drp/ngx-drp/ngx-drp.component.css\n// module chunks = main","module.exports = \"<div> \\n  \\n  <mat-form-field class=\\\"mat-drp-date-display\\\">\\n    <input class=\\\"mat-drp-date-input\\\"\\n          matInput placeholder=\\\"Choose a date\\\"\\n          [value]=\\\"selectedDateRange\\\"\\n          [matTooltip]=\\\"selectedDateRange\\\"\\n          #calendarInput >\\n    <mat-icon matSuffix \\n          svgIcon=\\\"ngx-calendar\\\"\\n          (click)=\\\"openCalendar($event)\\\">\\n    </mat-icon>\\n  </mat-form-field>\\n  \\n</div>    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/ngx-drp/ngx-drp.component.html\n// module id = ./src/app/ngx-drp/ngx-drp/ngx-drp.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, Output, EventEmitter, Input, OnDestroy, AfterViewInit } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { CalendarOverlayService } from '../services/calendar-overlay.service';\nimport { RangeStoreService } from '../services/range-store.service';\nimport { Range, NgxDrpOptions } from '../model/model';\nimport { timeout } from 'q';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ConfigStoreService } from '../services/config-store.service';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ngx-drp',\n  templateUrl: './ngx-drp.component.html',\n  styleUrls: ['./ngx-drp.component.css'],\n  providers:[DatePipe]\n})\nexport class NgxDrpComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('calendarInput') calendarInput;\n  @Output() readonly selectedDateRangeChanged: EventEmitter<Range> = new EventEmitter<Range>();\n  @Input() private options:NgxDrpOptions;\n  private $rangeUpdateSub:Subscription;\n  selectedDateRange:string = \"\";\n\n\n  constructor(\n    private calendarOverlayService: CalendarOverlayService,\n    private rangeStoreService:RangeStoreService,\n    private configStoreService:ConfigStoreService,\n    private iconRegistry:MatIconRegistry,\n    private sanitizer:DomSanitizer,\n    private datePipe:DatePipe\n  ) { \n    iconRegistry.addSvgIcon(\n      'ngx-calendar',\n      sanitizer.bypassSecurityTrustResourceUrl('assets/icons/ngx-calendar.svg'));\n  }\n\n  ngOnInit() {\n    this.configStoreService.ngxDropOptions = this.options; \n    this.$rangeUpdateSub = this.rangeStoreService.$rangeUpdate.subscribe(\n      (range) => {\n        const from:string = this.formatToDateString(range.fromDate, this.options.format);\n        const to:string = this.formatToDateString(range.toDate, this.options.format);\n        this.selectedDateRange = `${from} - ${to}`;\n        this.selectedDateRangeChanged.emit(range);\n      }\n    );\n  }\n  \n  ngOnDestroy() {\n    this.$rangeUpdateSub.unsubscribe();\n  }\n  \n  private formatToDateString(date:Date, format:string):string {\n    return this.datePipe.transform(date, format);\n  }  \n\n  ngAfterViewInit(){\n    let x = () => this.rangeStoreService.updateRange(this.options.range.fromDate, this.options.range.toDate);\n  }\n\n  openCalendar(event){\n    const overlayRef:OverlayRef =  this.calendarOverlayService.open({}, this.calendarInput);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/ngx-drp/ngx-drp.component.ts","module.exports = \"ul.ngx-presets-list {\\n    font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n    font-size: 14px;\\n    font-weight: 400;\\n    list-style-type: none;\\n    margin: 0px;\\n    padding: 0px;\\n}\\n\\nul.ngx-presets-list li {\\n    margin: 5px 0 5px 0;\\n    padding: 4%;\\n    cursor: pointer;\\n    background: #fafafa;\\n    color: #3f51b5;\\n    user-select: none;\\n    -webkit-user-select: none; /* for safari & chrome browsers */\\n    -moz-user-select: none; /* for mozilla browsers */\\n    -ms-user-select: none; /* for IE10+ */\\n}\\n\\nul.ngx-presets-list li:hover {\\n    background: #3f51b5;\\n    color: #fff;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/presets/presets.component.css\n// module id = ./src/app/ngx-drp/presets/presets.component.css\n// module chunks = main","module.exports = \"<div>\\n  <ul class=\\\"ngx-presets-list\\\">\\n    <li *ngFor=\\\"let preset of presets\\\" (click)=\\\"setPresetPeriod(preset)\\\"> {{preset.presetLabel}} </li>\\n  </ul>\\n  <!-- <div *ngFor=\\\"let preset of presets\\\">\\n    <button mat-button color=\\\"primary\\\" style=\\\"width:100%\\\" (click)=\\\"setPresetPeriod(preset)\\\">{{preset.presetLabel}}</button>\\n  </div> -->\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/presets/presets.component.html\n// module id = ./src/app/ngx-drp/presets/presets.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { PresetItem } from '../model/model';\n\n@Component({\n  selector: 'mat-drp-presets',\n  templateUrl: './presets.component.html',\n  styleUrls: ['./presets.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PresetsComponent implements OnInit {\n  \n  @Input() presets:Array<PresetItem>;\n  @Output() readonly presetChanged:EventEmitter<any> = new EventEmitter<any>();\n\n  constructor() { }\n\n  ngOnInit() { }\n\n  setPresetPeriod(event){\n    this.presetChanged.emit(event);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/presets/presets.component.ts","module.exports = \".calendar-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-pack: distribute;\\n        justify-content: space-around;\\n    min-width: 650px;\\n    height: 300px;\\n}\\n\\n.calendar-item {\\n    -ms-flex-preferred-size: 33.33%;\\n        flex-basis: 33.33%;\\n    min-width: 210px;\\n    padding: 1em;\\n    font-family: Roboto,\\\"Helvetica Neue\\\",sans-serif;\\n    font-size: 14px;\\n    font-weight: 400;\\n}\\n\\n.mat-drp-menu {\\n    height: 100%;\\n}\\n\\n.mat-drp-controls {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-pack: distribute;\\n        justify-content: space-around;\\n    margin: 10% auto;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/range/range.component.css\n// module id = ./src/app/ngx-drp/range/range.component.css\n// module chunks = main","module.exports = \"<div class=\\\"calendar-container\\\">\\n\\n  <div class=\\\"calendar-item\\\">\\n    <calendar-wrapper \\n    [prefix]=\\\"'FROM:'\\\" \\n    [selectedDate]=\\\"fromDate\\\"\\n    [minDate]=\\\"fromMinDate\\\"\\n    [maxDate]=\\\"fromMaxDate\\\"\\n    (selectedDateChange)=\\\"updateFromDate($event)\\\">\\n  </calendar-wrapper>\\n  </div>\\n  <div class=\\\"calendar-item\\\">\\n    <calendar-wrapper \\n    [prefix]=\\\"'TO:'\\\" \\n    [selectedDate]=\\\"toDate\\\"\\n    [minDate]=\\\"toMinDate\\\"\\n    [maxDate]=\\\"toMaxDate\\\" \\n    (selectedDateChange)=\\\"updateToDate($event)\\\">\\n  </calendar-wrapper>\\n  </div>\\n  <div class=\\\"calendar-item\\\">\\n    <div class=\\\"mat-drp-menu\\\">\\n      <mat-drp-presets [presets]=\\\"presets\\\" (presetChanged)=\\\"updateRangeByPreset($event)\\\"></mat-drp-presets>\\n      <div class=\\\"mat-drp-controls\\\">\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"applyNewDates($event)\\\">Apply</button>\\n        <button mat-button (click)=\\\"discardNewDates($event)\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/ngx-drp/range/range.component.html\n// module id = ./src/app/ngx-drp/range/range.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { PresetItem, NgxDrpOptions } from '../model/model';\nimport { RangeStoreService } from '../services/range-store.service';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport { ConfigStoreService } from '../services/config-store.service';\n\n@Component({\n  selector: 'mat-drp-range',\n  templateUrl: './range.component.html',\n  styleUrls: ['./range.component.css']\n})\nexport class RangeComponent implements OnInit {\n\n  fromDate:Date;\n  toDate:Date;\n  fromMinDate:Date;\n  fromMaxDate:Date;\n  toMinDate:Date;\n  toMaxDate:Date;\n  presets:Array<PresetItem> = [];\n  \n  constructor(\n    private rangeStoreService:RangeStoreService,\n    private configStoreService:ConfigStoreService,\n    private overlayRef:OverlayRef\n    ) { }\n\n  ngOnInit() {\n    this.fromDate = this.rangeStoreService.fromDate;\n    this.toDate = this.rangeStoreService.toDate;\n    this.presets = this.configStoreService.ngxDropOptions.presets;\n    ({fromDate:this.fromMinDate, toDate:this.fromMaxDate} = this.configStoreService.ngxDropOptions.fromMinMax);\n    ({fromDate:this.toMinDate, toDate:this.toMaxDate} = this.configStoreService.ngxDropOptions.toMinMax);\n  }\n\n  updateFromDate(date) {\n    this.fromDate = date;\n  }\n\n  updateToDate(date) {\n    this.toDate = date;\n  }\n\n  updateRangeByPreset(presetItem:PresetItem){ // Need a better way to expose API for setting presets externally\n    //this.rangeStoreService.updateRange(presetItem.range.fromDate, presetItem.range.toDate);\n    this.updateFromDate(presetItem.range.fromDate);\n    this.updateToDate(presetItem.range.toDate);\n  }\n\n  applyNewDates(e) {\n    this.rangeStoreService.updateRange(this.fromDate, this.toDate);\n    this.disposeOverLay();\n  }\n  \n  discardNewDates(e) {\n    this.rangeStoreService.updateRange();\n    this.disposeOverLay();\n  }\n  \n  private disposeOverLay(){\n    this.overlayRef.dispose();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/range/range.component.ts","import { Injectable, ElementRef, Injector } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\nimport { RangeComponent } from '../range/range.component';\nimport { NgxDrpOptions, CalendarDialogConfig } from '../model/model';\nimport { takeWhile } from 'rxjs/operators';\n\n\n\nconst DEFAULT_CONFIG: CalendarDialogConfig = {\n  panelClass:'dark-backdrop',\n  hasBackdrop:true,\n  backdropClass:'calendar-dialog-backdrop',\n  shouldCloseOnBackdropClick:true\n}\n\n@Injectable()\nexport class CalendarOverlayService {\n\n  private hostElemRef:ElementRef;\n\n  constructor(private overlay:Overlay, private injector:Injector) { }\n\n  open(config:CalendarDialogConfig = {}, hostElemRef:ElementRef):OverlayRef{\n    this.hostElemRef = hostElemRef;\n    const overlayConfig = {...DEFAULT_CONFIG, ...config};\n    const overlayRef = this.createOverlay(overlayConfig);\n    const portalInjector = this.createInjector(overlayRef);\n    const calendarPortal = new ComponentPortal(RangeComponent, null, portalInjector);\n    overlayRef.attach(calendarPortal);\n\n    overlayRef.backdropClick()\n      .pipe(takeWhile(() => overlayConfig.shouldCloseOnBackdropClick))\n      .subscribe(\n      () => overlayRef.dispose()\n    );\n\n    return overlayRef;\n  }\n\n  private createOverlay(config:CalendarDialogConfig):OverlayRef {\n    const overlayConfig = this.getOverlayConfig(config);\n    return this.overlay.create(overlayConfig);\n  }\n\n  private getOverlayConfig(config:CalendarDialogConfig):OverlayConfig {\n    const positionStrategy = this.overlay.position()\n    .connectedTo(\n      this.hostElemRef,\n      {originX:'start', originY:'bottom'},\n      {overlayX:'start', overlayY:'top'}\n    ).withOffsetY(8);\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n\n    return overlayConfig;\n  }\n\n  private createInjector(overlayRef:OverlayRef):PortalInjector {\n    const injectionTokens = new WeakMap();\n    injectionTokens.set(OverlayRef, overlayRef);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/services/calendar-overlay.service.ts","import { Injectable } from '@angular/core';\nimport { CalendarDialogConfig, NgxDrpOptions } from '../model/model';\n\n@Injectable()\nexport class ConfigStoreService {\n\n  private _calendarDialogConfig:CalendarDialogConfig;\n  private _ngxDrpOptions:NgxDrpOptions;\n  private defaultOptions = {\n    excludeWeekends:false,\n    locale: 'en-US',\n    fromMinMax:{fromDate:null, toDate:null},\n    toMinMax:{fromDate:null, toDate:null}\n  };\n\n  constructor() { }\n\n  get calendarDialogConfig():CalendarDialogConfig {\n    return this._calendarDialogConfig;\n  }\n\n  get ngxDropOptions():NgxDrpOptions {\n    return this._ngxDrpOptions;\n  }\n\n  set calendarDialogConfig(config:CalendarDialogConfig) {\n    this._calendarDialogConfig = config;\n  }\n\n  set ngxDropOptions(options:NgxDrpOptions) {\n    this._ngxDrpOptions = {...this.defaultOptions, ...options};\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/services/config-store.service.ts","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Range } from '../model/model';\n\n@Injectable()\nexport class RangeStoreService {\n\n  $rangeUpdate: Subject<Range> = new Subject<Range>();\n  private _fromDate: Date;\n  private _toDate: Date;\n\n  constructor() { }\n\n  /* set fromDate(fromDate:Date) {\n    this._fromDate = fromDate;\n  } */\n\n  get fromDate(): Date {\n    return this._fromDate;\n  }\n\n  /* set toDate(toDate:Date) {\n    this._toDate = toDate;\n  } */\n\n  get toDate(): Date {\n    return this._toDate;\n  }\n\n  updateRange(fromDate: Date = this._fromDate, toDate: Date = this._toDate) {\n    this._fromDate = fromDate;\n    this._toDate = toDate;\n    this.$rangeUpdate.next({ fromDate: this._fromDate, toDate: this._toDate });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/ngx-drp/services/range-store.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}